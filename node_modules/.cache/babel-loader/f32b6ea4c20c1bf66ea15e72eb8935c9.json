{"ast":null,"code":"var _jsxFileName = \"/Users/vishalverma/ReactNative/rtp/rentpur/src/components/CustomDropdown/CustomDropdown.jsx\";\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Popper from \"@material-ui/core/Popper\"; // core components\n\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport customDropdownStyle from \"assets/jss/material-kit-react/components/customDropdownStyle.jsx\";\n\nclass CustomDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      this.setState(state => ({\n        open: !state.open\n      }));\n    };\n\n    this.handleClose = param => {\n      this.setState({\n        open: false\n      });\n\n      if (this.props && this.props.onClick) {\n        this.props.onClick(param);\n      }\n    };\n\n    this.handleCloseAway = event => {\n      if (this.anchorEl.contains(event.target)) {\n        return;\n      }\n\n      this.setState({\n        open: false\n      });\n    };\n\n    this.state = {\n      open: false\n    };\n  }\n\n  render() {\n    const open = this.state.open;\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          buttonText = _this$props.buttonText,\n          buttonIcon = _this$props.buttonIcon,\n          dropdownList = _this$props.dropdownList,\n          buttonProps = _this$props.buttonProps,\n          dropup = _this$props.dropup,\n          dropdownHeader = _this$props.dropdownHeader,\n          caret = _this$props.caret,\n          hoverColor = _this$props.hoverColor,\n          left = _this$props.left,\n          rtlActive = _this$props.rtlActive,\n          noLiPadding = _this$props.noLiPadding;\n    const caretClasses = classNames({\n      [classes.caret]: true,\n      [classes.caretActive]: open,\n      [classes.caretRTL]: rtlActive\n    });\n    const dropdownItem = classNames({\n      [classes.dropdownItem]: true,\n      [classes[hoverColor + \"Hover\"]]: true,\n      [classes.noLiPadding]: noLiPadding,\n      [classes.dropdownItemRTL]: rtlActive\n    });\n    let icon = null;\n\n    switch (typeof buttonIcon) {\n      case \"function\":\n        icon = React.createElement(this.props.buttonIcon, {\n          className: classes.buttonIcon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        });\n        break;\n\n      case \"string\":\n        icon = React.createElement(Icon, {\n          className: classes.buttonIcon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, this.props.buttonIcon);\n        break;\n\n      default:\n        icon = null;\n        break;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Button, Object.assign({\n      \"aria-label\": \"Notifications\",\n      \"aria-owns\": open ? \"menu-list\" : null,\n      \"aria-haspopup\": \"true\"\n    }, buttonProps, {\n      buttonRef: node => {\n        this.anchorEl = node;\n      },\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), icon, buttonText !== undefined ? buttonText : null, caret ? React.createElement(\"b\", {\n      className: caretClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }) : null)), React.createElement(Popper, {\n      open: open,\n      anchorEl: this.anchorEl,\n      transition: true,\n      disablePortal: true,\n      placement: dropup ? left ? \"top-start\" : \"top\" : left ? \"bottom-start\" : \"bottom\",\n      className: classNames({\n        [classes.popperClose]: !open,\n        [classes.popperResponsive]: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, ({\n      TransitionProps,\n      placement\n    }) => React.createElement(Grow, {\n      in: open,\n      id: \"menu-list\",\n      style: dropup ? {\n        transformOrigin: \"0 100% 0\"\n      } : {\n        transformOrigin: \"0 0 0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.dropdown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(ClickAwayListener, {\n      onClickAway: this.handleCloseAway,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(MenuList, {\n      role: \"menu\",\n      className: classes.menuList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, dropdownHeader !== undefined ? React.createElement(MenuItem, {\n      onClick: () => this.handleClose(dropdownHeader),\n      className: classes.dropdownHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, dropdownHeader) : null, dropdownList.map((prop, key) => {\n      if (prop.divider) {\n        return React.createElement(Divider, {\n          key: key,\n          onClick: () => this.handleClose(\"divider\"),\n          className: classes.dropdownDividerItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(MenuItem, {\n        key: key,\n        onClick: () => this.handleClose(prop),\n        className: dropdownItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, prop);\n    })))))));\n  }\n\n}\n\nCustomDropdown.defaultProps = {\n  caret: true,\n  hoverColor: \"primary\"\n};\nCustomDropdown.propTypes = {\n  classes: PropTypes.object.isRequired,\n  hoverColor: PropTypes.oneOf([\"black\", \"primary\", \"info\", \"success\", \"warning\", \"danger\", \"rose\"]),\n  buttonText: PropTypes.node,\n  buttonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  dropdownList: PropTypes.array,\n  buttonProps: PropTypes.object,\n  dropup: PropTypes.bool,\n  dropdownHeader: PropTypes.node,\n  rtlActive: PropTypes.bool,\n  caret: PropTypes.bool,\n  left: PropTypes.bool,\n  noLiPadding: PropTypes.bool,\n  // function that retuns the selected item\n  onClick: PropTypes.func\n};\nexport default withStyles(customDropdownStyle)(CustomDropdown);","map":{"version":3,"sources":["/Users/vishalverma/ReactNative/rtp/rentpur/src/components/CustomDropdown/CustomDropdown.jsx"],"names":["React","classNames","PropTypes","withStyles","MenuItem","MenuList","ClickAwayListener","Paper","Grow","Divider","Icon","Popper","Button","customDropdownStyle","CustomDropdown","Component","constructor","props","handleClick","setState","state","open","handleClose","param","onClick","handleCloseAway","event","anchorEl","contains","target","render","classes","buttonText","buttonIcon","dropdownList","buttonProps","dropup","dropdownHeader","caret","hoverColor","left","rtlActive","noLiPadding","caretClasses","caretActive","caretRTL","dropdownItem","dropdownItemRTL","icon","node","undefined","popperClose","popperResponsive","TransitionProps","placement","transformOrigin","dropdown","menuList","map","prop","key","divider","dropdownDividerItem","defaultProps","propTypes","object","isRequired","oneOf","oneOfType","func","string","array","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AAEA,OAAOC,mBAAP,MAAgC,kEAAhC;;AAEA,MAAMC,cAAN,SAA6Bd,KAAK,CAACe,SAAnC,CAA6C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAMnBC,WANmB,GAML,MAAM;AAClB,WAAKC,QAAL,CAAcC,KAAK,KAAK;AAAEC,QAAAA,IAAI,EAAE,CAACD,KAAK,CAACC;AAAf,OAAL,CAAnB;AACD,KARkB;;AAAA,SASnBC,WATmB,GASLC,KAAK,IAAI;AACrB,WAAKJ,QAAL,CAAc;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAAd;;AACA,UAAI,KAAKJ,KAAL,IAAc,KAAKA,KAAL,CAAWO,OAA7B,EAAsC;AACpC,aAAKP,KAAL,CAAWO,OAAX,CAAmBD,KAAnB;AACD;AACF,KAdkB;;AAAA,SAenBE,eAfmB,GAeDC,KAAK,IAAI;AACzB,UAAI,KAAKC,QAAL,CAAcC,QAAd,CAAuBF,KAAK,CAACG,MAA7B,CAAJ,EAA0C;AACxC;AACD;;AACD,WAAKV,QAAL,CAAc;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KApBkB;;AAEjB,SAAKD,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAgBDS,EAAAA,MAAM,GAAG;AAAA,UACCT,IADD,GACU,KAAKD,KADf,CACCC,IADD;AAAA,wBAeH,KAAKJ,KAfF;AAAA,UAGLc,OAHK,eAGLA,OAHK;AAAA,UAILC,UAJK,eAILA,UAJK;AAAA,UAKLC,UALK,eAKLA,UALK;AAAA,UAMLC,YANK,eAMLA,YANK;AAAA,UAOLC,WAPK,eAOLA,WAPK;AAAA,UAQLC,MARK,eAQLA,MARK;AAAA,UASLC,cATK,eASLA,cATK;AAAA,UAULC,KAVK,eAULA,KAVK;AAAA,UAWLC,UAXK,eAWLA,UAXK;AAAA,UAYLC,IAZK,eAYLA,IAZK;AAAA,UAaLC,SAbK,eAaLA,SAbK;AAAA,UAcLC,WAdK,eAcLA,WAdK;AAgBP,UAAMC,YAAY,GAAG1C,UAAU,CAAC;AAC9B,OAAC8B,OAAO,CAACO,KAAT,GAAiB,IADa;AAE9B,OAACP,OAAO,CAACa,WAAT,GAAuBvB,IAFO;AAG9B,OAACU,OAAO,CAACc,QAAT,GAAoBJ;AAHU,KAAD,CAA/B;AAKA,UAAMK,YAAY,GAAG7C,UAAU,CAAC;AAC9B,OAAC8B,OAAO,CAACe,YAAT,GAAwB,IADM;AAE9B,OAACf,OAAO,CAACQ,UAAU,GAAG,OAAd,CAAR,GAAiC,IAFH;AAG9B,OAACR,OAAO,CAACW,WAAT,GAAuBA,WAHO;AAI9B,OAACX,OAAO,CAACgB,eAAT,GAA2BN;AAJG,KAAD,CAA/B;AAMA,QAAIO,IAAI,GAAG,IAAX;;AACA,YAAQ,OAAOf,UAAf;AACE,WAAK,UAAL;AACEe,QAAAA,IAAI,GAAG,yBAAM,KAAN,CAAY,UAAZ;AAAuB,UAAA,SAAS,EAAEjB,OAAO,CAACE,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;AACF,WAAK,QAAL;AACEe,QAAAA,IAAI,GACF,oBAAC,IAAD;AAAM,UAAA,SAAS,EAAEjB,OAAO,CAACE,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsC,KAAKhB,KAAL,CAAWgB,UAAjD,CADF;AAGA;;AACF;AACEe,QAAAA,IAAI,GAAG,IAAP;AACA;AAXJ;;AAaA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,oBAAW,eADb;AAEE,mBAAW3B,IAAI,GAAG,WAAH,GAAiB,IAFlC;AAGE,uBAAc;AAHhB,OAIMc,WAJN;AAKE,MAAA,SAAS,EAAEc,IAAI,IAAI;AACjB,aAAKtB,QAAL,GAAgBsB,IAAhB;AACD,OAPH;AAQE,MAAA,OAAO,EAAE,KAAK/B,WARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAUG8B,IAVH,EAWGhB,UAAU,KAAKkB,SAAf,GAA2BlB,UAA3B,GAAwC,IAX3C,EAYGM,KAAK,GAAG;AAAG,MAAA,SAAS,EAAEK,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAoC,IAZ5C,CADF,CADF,EAiBE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAEtB,IADR;AAEE,MAAA,QAAQ,EAAE,KAAKM,QAFjB;AAGE,MAAA,UAAU,MAHZ;AAIE,MAAA,aAAa,MAJf;AAKE,MAAA,SAAS,EACPS,MAAM,GACFI,IAAI,GACF,WADE,GAEF,KAHA,GAIFA,IAAI,GACJ,cADI,GAEJ,QAZR;AAcE,MAAA,SAAS,EAAEvC,UAAU,CAAC;AACpB,SAAC8B,OAAO,CAACoB,WAAT,GAAuB,CAAC9B,IADJ;AAEpB,SAACU,OAAO,CAACqB,gBAAT,GAA4B;AAFR,OAAD,CAdvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAmBG,CAAC;AAAEC,MAAAA,eAAF;AAAmBC,MAAAA;AAAnB,KAAD,KACC,oBAAC,IAAD;AACE,MAAA,EAAE,EAAEjC,IADN;AAEE,MAAA,EAAE,EAAC,WAFL;AAGE,MAAA,KAAK,EACHe,MAAM,GACF;AAAEmB,QAAAA,eAAe,EAAE;AAAnB,OADE,GAEF;AAAEA,QAAAA,eAAe,EAAE;AAAnB,OANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAExB,OAAO,CAACyB,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAmB,MAAA,WAAW,EAAE,KAAK/B,eAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAC,MAAf;AAAsB,MAAA,SAAS,EAAEM,OAAO,CAAC0B,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGpB,cAAc,KAAKa,SAAnB,GACC,oBAAC,QAAD;AACE,MAAA,OAAO,EAAE,MAAM,KAAK5B,WAAL,CAAiBe,cAAjB,CADjB;AAEE,MAAA,SAAS,EAAEN,OAAO,CAACM,cAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGA,cAJH,CADD,GAOG,IARN,EASGH,YAAY,CAACwB,GAAb,CAAiB,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC/B,UAAID,IAAI,CAACE,OAAT,EAAkB;AAChB,eACE,oBAAC,OAAD;AACE,UAAA,GAAG,EAAED,GADP;AAEE,UAAA,OAAO,EAAE,MAAM,KAAKtC,WAAL,CAAiB,SAAjB,CAFjB;AAGE,UAAA,SAAS,EAAES,OAAO,CAAC+B,mBAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;AACD,aACE,oBAAC,QAAD;AACE,QAAA,GAAG,EAAEF,GADP;AAEE,QAAA,OAAO,EAAE,MAAM,KAAKtC,WAAL,CAAiBqC,IAAjB,CAFjB;AAGE,QAAA,SAAS,EAAEb,YAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGa,IALH,CADF;AASD,KAnBA,CATH,CADF,CADF,CATF,CApBJ,CAjBF,CADF;AAsFD;;AArJ0C;;AAwJ7C7C,cAAc,CAACiD,YAAf,GAA8B;AAC5BzB,EAAAA,KAAK,EAAE,IADqB;AAE5BC,EAAAA,UAAU,EAAE;AAFgB,CAA9B;AAKAzB,cAAc,CAACkD,SAAf,GAA2B;AACzBjC,EAAAA,OAAO,EAAE7B,SAAS,CAAC+D,MAAV,CAAiBC,UADD;AAEzB3B,EAAAA,UAAU,EAAErC,SAAS,CAACiE,KAAV,CAAgB,CAC1B,OAD0B,EAE1B,SAF0B,EAG1B,MAH0B,EAI1B,SAJ0B,EAK1B,SAL0B,EAM1B,QAN0B,EAO1B,MAP0B,CAAhB,CAFa;AAWzBnC,EAAAA,UAAU,EAAE9B,SAAS,CAAC+C,IAXG;AAYzBhB,EAAAA,UAAU,EAAE/B,SAAS,CAACkE,SAAV,CAAoB,CAAClE,SAAS,CAACmE,IAAX,EAAiBnE,SAAS,CAACoE,MAA3B,CAApB,CAZa;AAazBpC,EAAAA,YAAY,EAAEhC,SAAS,CAACqE,KAbC;AAczBpC,EAAAA,WAAW,EAAEjC,SAAS,CAAC+D,MAdE;AAezB7B,EAAAA,MAAM,EAAElC,SAAS,CAACsE,IAfO;AAgBzBnC,EAAAA,cAAc,EAAEnC,SAAS,CAAC+C,IAhBD;AAiBzBR,EAAAA,SAAS,EAAEvC,SAAS,CAACsE,IAjBI;AAkBzBlC,EAAAA,KAAK,EAAEpC,SAAS,CAACsE,IAlBQ;AAmBzBhC,EAAAA,IAAI,EAAEtC,SAAS,CAACsE,IAnBS;AAoBzB9B,EAAAA,WAAW,EAAExC,SAAS,CAACsE,IApBE;AAqBzB;AACAhD,EAAAA,OAAO,EAAEtB,SAAS,CAACmE;AAtBM,CAA3B;AAyBA,eAAelE,UAAU,CAACU,mBAAD,CAAV,CAAgCC,cAAhC,CAAf","sourcesContent":["import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Popper from \"@material-ui/core/Popper\";\n\n// core components\nimport Button from \"components/CustomButtons/Button.jsx\";\n\nimport customDropdownStyle from \"assets/jss/material-kit-react/components/customDropdownStyle.jsx\";\n\nclass CustomDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n  }\n  handleClick = () => {\n    this.setState(state => ({ open: !state.open }));\n  };\n  handleClose = param => {\n    this.setState({ open: false });\n    if (this.props && this.props.onClick) {\n      this.props.onClick(param);\n    }\n  };\n  handleCloseAway = event => {\n    if (this.anchorEl.contains(event.target)) {\n      return;\n    }\n    this.setState({ open: false });\n  };\n  render() {\n    const { open } = this.state;\n    const {\n      classes,\n      buttonText,\n      buttonIcon,\n      dropdownList,\n      buttonProps,\n      dropup,\n      dropdownHeader,\n      caret,\n      hoverColor,\n      left,\n      rtlActive,\n      noLiPadding\n    } = this.props;\n    const caretClasses = classNames({\n      [classes.caret]: true,\n      [classes.caretActive]: open,\n      [classes.caretRTL]: rtlActive\n    });\n    const dropdownItem = classNames({\n      [classes.dropdownItem]: true,\n      [classes[hoverColor + \"Hover\"]]: true,\n      [classes.noLiPadding]: noLiPadding,\n      [classes.dropdownItemRTL]: rtlActive\n    });\n    let icon = null;\n    switch (typeof buttonIcon) {\n      case \"function\":\n        icon = <this.props.buttonIcon className={classes.buttonIcon} />;\n        break;\n      case \"string\":\n        icon = (\n          <Icon className={classes.buttonIcon}>{this.props.buttonIcon}</Icon>\n        );\n        break;\n      default:\n        icon = null;\n        break;\n    }\n    return (\n      <div>\n        <div>\n          <Button\n            aria-label=\"Notifications\"\n            aria-owns={open ? \"menu-list\" : null}\n            aria-haspopup=\"true\"\n            {...buttonProps}\n            buttonRef={node => {\n              this.anchorEl = node;\n            }}\n            onClick={this.handleClick}\n          >\n            {icon}\n            {buttonText !== undefined ? buttonText : null}\n            {caret ? <b className={caretClasses} /> : null}\n          </Button>\n        </div>\n        <Popper\n          open={open}\n          anchorEl={this.anchorEl}\n          transition\n          disablePortal\n          placement={\n            dropup\n              ? left\n                ? \"top-start\"\n                : \"top\"\n              : left\n              ? \"bottom-start\"\n              : \"bottom\"\n          }\n          className={classNames({\n            [classes.popperClose]: !open,\n            [classes.popperResponsive]: true\n          })}\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              in={open}\n              id=\"menu-list\"\n              style={\n                dropup\n                  ? { transformOrigin: \"0 100% 0\" }\n                  : { transformOrigin: \"0 0 0\" }\n              }\n            >\n              <Paper className={classes.dropdown}>\n                <ClickAwayListener onClickAway={this.handleCloseAway}>\n                  <MenuList role=\"menu\" className={classes.menuList}>\n                    {dropdownHeader !== undefined ? (\n                      <MenuItem\n                        onClick={() => this.handleClose(dropdownHeader)}\n                        className={classes.dropdownHeader}\n                      >\n                        {dropdownHeader}\n                      </MenuItem>\n                    ) : null}\n                    {dropdownList.map((prop, key) => {\n                      if (prop.divider) {\n                        return (\n                          <Divider\n                            key={key}\n                            onClick={() => this.handleClose(\"divider\")}\n                            className={classes.dropdownDividerItem}\n                          />\n                        );\n                      }\n                      return (\n                        <MenuItem\n                          key={key}\n                          onClick={() => this.handleClose(prop)}\n                          className={dropdownItem}\n                        >\n                          {prop}\n                        </MenuItem>\n                      );\n                    })}\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </div>\n    );\n  }\n}\n\nCustomDropdown.defaultProps = {\n  caret: true,\n  hoverColor: \"primary\"\n};\n\nCustomDropdown.propTypes = {\n  classes: PropTypes.object.isRequired,\n  hoverColor: PropTypes.oneOf([\n    \"black\",\n    \"primary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n    \"rose\"\n  ]),\n  buttonText: PropTypes.node,\n  buttonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  dropdownList: PropTypes.array,\n  buttonProps: PropTypes.object,\n  dropup: PropTypes.bool,\n  dropdownHeader: PropTypes.node,\n  rtlActive: PropTypes.bool,\n  caret: PropTypes.bool,\n  left: PropTypes.bool,\n  noLiPadding: PropTypes.bool,\n  // function that retuns the selected item\n  onClick: PropTypes.func\n};\n\nexport default withStyles(customDropdownStyle)(CustomDropdown);\n"]},"metadata":{},"sourceType":"module"}