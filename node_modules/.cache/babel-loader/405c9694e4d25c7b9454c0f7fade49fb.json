{"ast":null,"code":"var _jsxFileName = \"/Users/vishalverma/ReactNative/rtp/rentpur/src/views/Components/Sections/SectionJavascript.jsx\";\nimport React from \"react\"; // react plugin for creating date-time-picker\n\nimport Datetime from \"react-datetime\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Slide from \"@material-ui/core/Slide\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Popover from \"@material-ui/core/Popover\"; // @material-ui/icons\n\nimport LibraryBooks from \"@material-ui/icons/LibraryBooks\";\nimport Close from \"@material-ui/icons/Close\"; // core components\n\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport javascriptStyles from \"assets/jss/material-kit-react/views/componentsSections/javascriptStyles.jsx\";\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"down\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n}\n\nclass SectionJavascript extends React.Component {\n  constructor(props) {\n    super(props);\n    this.anchorElLeft = null;\n    this.anchorElTop = null;\n    this.anchorElBottom = null;\n    this.anchorElRight = null;\n    this.state = {\n      classicModal: false,\n      openLeft: false,\n      openTop: false,\n      openBottom: false,\n      openRight: false\n    };\n  }\n\n  handleClickOpen(modal) {\n    var x = [];\n    x[modal] = true;\n    this.setState(x);\n  }\n\n  handleClose(modal) {\n    var x = [];\n    x[modal] = false;\n    this.setState(x);\n  }\n\n  handleClosePopover(state) {\n    this.setState({\n      [state]: false\n    });\n  }\n\n  handleClickButton(state) {\n    this.setState({\n      [state]: true\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.section,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Javascript components\")), React.createElement(GridContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Modal\")), React.createElement(GridContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 6,\n      lg: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      block: true,\n      onClick: () => this.handleClickOpen(\"classicModal\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(LibraryBooks, {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), \"Classic\"), React.createElement(Dialog, {\n      classes: {\n        root: classes.center,\n        paper: classes.modal\n      },\n      open: this.state.classicModal,\n      TransitionComponent: Transition,\n      keepMounted: true,\n      onClose: () => this.handleClose(\"classicModal\"),\n      \"aria-labelledby\": \"classic-modal-slide-title\",\n      \"aria-describedby\": \"classic-modal-slide-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"classic-modal-slide-title\",\n      disableTypography: true,\n      className: classes.modalHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: classes.modalCloseButton,\n      key: \"close\",\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      onClick: () => this.handleClose(\"classicModal\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Close, {\n      className: classes.modalClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(\"h4\", {\n      className: classes.modalTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Modal title\")), React.createElement(DialogContent, {\n      id: \"classic-modal-slide-description\",\n      className: classes.modalBody,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. Separated they live in Bookmarksgrove right at the coast of the Semantics, a large language ocean. A small river named Duden flows by their place and supplies it with the necessary regelialia. It is a paradisematic country, in which roasted parts of sentences fly into your mouth. Even the all-powerful Pointing has no control about the blind texts it is an almost unorthographic life One day however a small line of blind text by the name of Lorem Ipsum decided to leave for the far World of Grammar.\")), React.createElement(DialogActions, {\n      className: classes.modalFooter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"transparent\",\n      simple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Nice Button\"), React.createElement(Button, {\n      onClick: () => this.handleClose(\"classicModal\"),\n      color: \"danger\",\n      simple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Close\"))))), React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Datetime Picker\")), React.createElement(GridContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      className: classes.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Datetime Picker\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Datetime, {\n      inputProps: {\n        placeholder: \"Datetime Picker Here\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })))))), React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Popovers\")), React.createElement(Button, {\n      buttonRef: node => {\n        this.anchorElLeft = node;\n      },\n      onClick: () => this.handleClickButton(\"openLeft\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"On left\"), React.createElement(Popover, {\n      classes: {\n        paper: classes.popover\n      },\n      open: this.state.openLeft,\n      anchorEl: this.anchorElLeft,\n      anchorReference: \"anchorEl\",\n      onClose: () => this.handleClosePopover(\"openLeft\"),\n      anchorOrigin: {\n        vertical: \"center\",\n        horizontal: \"left\"\n      },\n      transformOrigin: {\n        vertical: \"center\",\n        horizontal: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: classes.popoverHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Popover on left\"), React.createElement(\"div\", {\n      className: classes.popoverBody,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Here will be some very useful information about his popover. Here will be some very useful information about his popover.\")), React.createElement(Button, {\n      buttonRef: node => {\n        this.anchorElTop = node;\n      },\n      onClick: () => this.handleClickButton(\"openTop\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"On top\"), React.createElement(Popover, {\n      classes: {\n        paper: classes.popover\n      },\n      open: this.state.openTop,\n      anchorEl: this.anchorElTop,\n      anchorReference: \"anchorEl\",\n      onClose: () => this.handleClosePopover(\"openTop\"),\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      transformOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: classes.popoverHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Popover on top\"), React.createElement(\"div\", {\n      className: classes.popoverBody,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Here will be some very useful information about his popover.\")), React.createElement(Button, {\n      buttonRef: node => {\n        this.anchorElBottom = node;\n      },\n      onClick: () => this.handleClickButton(\"openBottom\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"On bottom\"), React.createElement(Popover, {\n      classes: {\n        paper: classes.popover\n      },\n      open: this.state.openBottom,\n      anchorEl: this.anchorElBottom,\n      anchorReference: \"anchorEl\",\n      onClose: () => this.handleClosePopover(\"openBottom\"),\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: classes.popoverHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"Popover on bottom\"), React.createElement(\"div\", {\n      className: classes.popoverBody,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"Here will be some very useful information about his popover.\")), React.createElement(Button, {\n      buttonRef: node => {\n        this.anchorElRight = node;\n      },\n      onClick: () => this.handleClickButton(\"openRight\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"On right\"), React.createElement(Popover, {\n      classes: {\n        paper: classes.popover\n      },\n      open: this.state.openRight,\n      anchorEl: this.anchorElRight,\n      anchorReference: \"anchorEl\",\n      onClose: () => this.handleClosePopover(\"openRight\"),\n      anchorOrigin: {\n        vertical: \"center\",\n        horizontal: \"right\"\n      },\n      transformOrigin: {\n        vertical: \"center\",\n        horizontal: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: classes.popoverHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"Popover on right\"), React.createElement(\"div\", {\n      className: classes.popoverBody,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"Here will be some very useful information about his popover.\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"Tooltips\")), React.createElement(Tooltip, {\n      id: \"tooltip-left\",\n      title: \"Tooltip on left\",\n      placement: \"left\",\n      classes: {\n        tooltip: classes.tooltip\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"On left\")), React.createElement(Tooltip, {\n      id: \"tooltip-top\",\n      title: \"Tooltip on top\",\n      placement: \"top\",\n      classes: {\n        tooltip: classes.tooltip\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"On top\")), React.createElement(Tooltip, {\n      id: \"tooltip-bottom\",\n      title: \"Tooltip on bottom\",\n      placement: \"bottom\",\n      classes: {\n        tooltip: classes.tooltip\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, \"On bottom\")), React.createElement(Tooltip, {\n      id: \"tooltip-right\",\n      title: \"Tooltip on right\",\n      placement: \"right\",\n      classes: {\n        tooltip: classes.tooltip\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, \"On right\")))), React.createElement(\"div\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"Carousel\"))));\n  }\n\n}\n\nexport default withStyles(javascriptStyles)(SectionJavascript);","map":{"version":3,"sources":["/Users/vishalverma/ReactNative/rtp/rentpur/src/views/Components/Sections/SectionJavascript.jsx"],"names":["React","Datetime","withStyles","Slide","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","InputLabel","FormControl","Tooltip","Popover","LibraryBooks","Close","GridContainer","GridItem","Button","javascriptStyles","Transition","props","SectionJavascript","Component","constructor","anchorElLeft","anchorElTop","anchorElBottom","anchorElRight","state","classicModal","openLeft","openTop","openBottom","openRight","handleClickOpen","modal","x","setState","handleClose","handleClosePopover","handleClickButton","render","classes","section","container","title","icon","root","center","paper","modalHeader","modalCloseButton","modalClose","modalTitle","modalBody","modalFooter","label","placeholder","node","popover","vertical","horizontal","popoverHeader","popoverBody","tooltip"],"mappings":"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","sourcesContent":["import React from \"react\";\n// react plugin for creating date-time-picker\nimport Datetime from \"react-datetime\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Slide from \"@material-ui/core/Slide\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Popover from \"@material-ui/core/Popover\";\n// @material-ui/icons\nimport LibraryBooks from \"@material-ui/icons/LibraryBooks\";\nimport Close from \"@material-ui/icons/Close\";\n// core components\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport javascriptStyles from \"assets/jss/material-kit-react/views/componentsSections/javascriptStyles.jsx\";\n\nfunction Transition(props) {\n  return <Slide direction=\"down\" {...props} />;\n}\n\nclass SectionJavascript extends React.Component {\n  anchorElLeft = null;\n  anchorElTop = null;\n  anchorElBottom = null;\n  anchorElRight = null;\n  constructor(props) {\n    super(props);\n    this.state = {\n      classicModal: false,\n      openLeft: false,\n      openTop: false,\n      openBottom: false,\n      openRight: false\n    };\n  }\n  handleClickOpen(modal) {\n    var x = [];\n    x[modal] = true;\n    this.setState(x);\n  }\n  handleClose(modal) {\n    var x = [];\n    x[modal] = false;\n    this.setState(x);\n  }\n  handleClosePopover(state) {\n    this.setState({\n      [state]: false\n    });\n  }\n  handleClickButton(state) {\n    this.setState({\n      [state]: true\n    });\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.section}>\n        <div className={classes.container}>\n          <div className={classes.title}>\n            <h2>Javascript components</h2>\n          </div>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={6}>\n              <div className={classes.title}>\n                <h3>Modal</h3>\n              </div>\n              <GridContainer>\n                <GridItem xs={12} sm={12} md={6} lg={4}>\n                  <Button\n                    color=\"primary\"\n                    block\n                    onClick={() => this.handleClickOpen(\"classicModal\")}\n                  >\n                    <LibraryBooks className={classes.icon} />\n                    Classic\n                  </Button>\n                  <Dialog\n                    classes={{\n                      root: classes.center,\n                      paper: classes.modal\n                    }}\n                    open={this.state.classicModal}\n                    TransitionComponent={Transition}\n                    keepMounted\n                    onClose={() => this.handleClose(\"classicModal\")}\n                    aria-labelledby=\"classic-modal-slide-title\"\n                    aria-describedby=\"classic-modal-slide-description\"\n                  >\n                    <DialogTitle\n                      id=\"classic-modal-slide-title\"\n                      disableTypography\n                      className={classes.modalHeader}\n                    >\n                      <IconButton\n                        className={classes.modalCloseButton}\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        onClick={() => this.handleClose(\"classicModal\")}\n                      >\n                        <Close className={classes.modalClose} />\n                      </IconButton>\n                      <h4 className={classes.modalTitle}>Modal title</h4>\n                    </DialogTitle>\n                    <DialogContent\n                      id=\"classic-modal-slide-description\"\n                      className={classes.modalBody}\n                    >\n                      <p>\n                        Far far away, behind the word mountains, far from the\n                        countries Vokalia and Consonantia, there live the blind\n                        texts. Separated they live in Bookmarksgrove right at\n                        the coast of the Semantics, a large language ocean. A\n                        small river named Duden flows by their place and\n                        supplies it with the necessary regelialia. It is a\n                        paradisematic country, in which roasted parts of\n                        sentences fly into your mouth. Even the all-powerful\n                        Pointing has no control about the blind texts it is an\n                        almost unorthographic life One day however a small line\n                        of blind text by the name of Lorem Ipsum decided to\n                        leave for the far World of Grammar.\n                      </p>\n                    </DialogContent>\n                    <DialogActions className={classes.modalFooter}>\n                      <Button color=\"transparent\" simple>\n                        Nice Button\n                      </Button>\n                      <Button\n                        onClick={() => this.handleClose(\"classicModal\")}\n                        color=\"danger\"\n                        simple\n                      >\n                        Close\n                      </Button>\n                    </DialogActions>\n                  </Dialog>\n                </GridItem>\n              </GridContainer>\n              <GridItem xs={12} sm={12} md={12}>\n                <div className={classes.title}>\n                  <h3>Datetime Picker</h3>\n                </div>\n                <GridContainer>\n                  <GridItem xs={12} sm={12} md={6}>\n                    <InputLabel className={classes.label}>\n                      Datetime Picker\n                    </InputLabel>\n                    <br />\n                    <FormControl fullWidth>\n                      <Datetime\n                        inputProps={{ placeholder: \"Datetime Picker Here\" }}\n                      />\n                    </FormControl>\n                  </GridItem>\n                </GridContainer>\n              </GridItem>\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <div className={classes.title}>\n                <h3>Popovers</h3>\n              </div>\n              <Button\n                buttonRef={node => {\n                  this.anchorElLeft = node;\n                }}\n                onClick={() => this.handleClickButton(\"openLeft\")}\n              >\n                On left\n              </Button>\n              <Popover\n                classes={{\n                  paper: classes.popover\n                }}\n                open={this.state.openLeft}\n                anchorEl={this.anchorElLeft}\n                anchorReference={\"anchorEl\"}\n                onClose={() => this.handleClosePopover(\"openLeft\")}\n                anchorOrigin={{\n                  vertical: \"center\",\n                  horizontal: \"left\"\n                }}\n                transformOrigin={{\n                  vertical: \"center\",\n                  horizontal: \"right\"\n                }}\n              >\n                <h3 className={classes.popoverHeader}>Popover on left</h3>\n                <div className={classes.popoverBody}>\n                  Here will be some very useful information about his popover.\n                  Here will be some very useful information about his popover.\n                </div>\n              </Popover>\n              <Button\n                buttonRef={node => {\n                  this.anchorElTop = node;\n                }}\n                onClick={() => this.handleClickButton(\"openTop\")}\n              >\n                On top\n              </Button>\n              <Popover\n                classes={{\n                  paper: classes.popover\n                }}\n                open={this.state.openTop}\n                anchorEl={this.anchorElTop}\n                anchorReference={\"anchorEl\"}\n                onClose={() => this.handleClosePopover(\"openTop\")}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"center\"\n                }}\n                transformOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"center\"\n                }}\n              >\n                <h3 className={classes.popoverHeader}>Popover on top</h3>\n                <div className={classes.popoverBody}>\n                  Here will be some very useful information about his popover.\n                </div>\n              </Popover>\n              <Button\n                buttonRef={node => {\n                  this.anchorElBottom = node;\n                }}\n                onClick={() => this.handleClickButton(\"openBottom\")}\n              >\n                On bottom\n              </Button>\n              <Popover\n                classes={{\n                  paper: classes.popover\n                }}\n                open={this.state.openBottom}\n                anchorEl={this.anchorElBottom}\n                anchorReference={\"anchorEl\"}\n                onClose={() => this.handleClosePopover(\"openBottom\")}\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"center\"\n                }}\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"center\"\n                }}\n              >\n                <h3 className={classes.popoverHeader}>Popover on bottom</h3>\n                <div className={classes.popoverBody}>\n                  Here will be some very useful information about his popover.\n                </div>\n              </Popover>\n              <Button\n                buttonRef={node => {\n                  this.anchorElRight = node;\n                }}\n                onClick={() => this.handleClickButton(\"openRight\")}\n              >\n                On right\n              </Button>\n              <Popover\n                classes={{\n                  paper: classes.popover\n                }}\n                open={this.state.openRight}\n                anchorEl={this.anchorElRight}\n                anchorReference={\"anchorEl\"}\n                onClose={() => this.handleClosePopover(\"openRight\")}\n                anchorOrigin={{\n                  vertical: \"center\",\n                  horizontal: \"right\"\n                }}\n                transformOrigin={{\n                  vertical: \"center\",\n                  horizontal: \"left\"\n                }}\n              >\n                <h3 className={classes.popoverHeader}>Popover on right</h3>\n                <div className={classes.popoverBody}>\n                  Here will be some very useful information about his popover.\n                </div>\n              </Popover>\n              <br />\n              <br />\n              <div className={classes.title}>\n                <h3>Tooltips</h3>\n              </div>\n              <Tooltip\n                id=\"tooltip-left\"\n                title=\"Tooltip on left\"\n                placement=\"left\"\n                classes={{ tooltip: classes.tooltip }}\n              >\n                <Button>On left</Button>\n              </Tooltip>\n              <Tooltip\n                id=\"tooltip-top\"\n                title=\"Tooltip on top\"\n                placement=\"top\"\n                classes={{ tooltip: classes.tooltip }}\n              >\n                <Button>On top</Button>\n              </Tooltip>\n              <Tooltip\n                id=\"tooltip-bottom\"\n                title=\"Tooltip on bottom\"\n                placement=\"bottom\"\n                classes={{ tooltip: classes.tooltip }}\n              >\n                <Button>On bottom</Button>\n              </Tooltip>\n              <Tooltip\n                id=\"tooltip-right\"\n                title=\"Tooltip on right\"\n                placement=\"right\"\n                classes={{ tooltip: classes.tooltip }}\n              >\n                <Button>On right</Button>\n              </Tooltip>\n            </GridItem>\n          </GridContainer>\n          <div className={classes.title}>\n            <h3>Carousel</h3>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(javascriptStyles)(SectionJavascript);\n"]},"metadata":{},"sourceType":"module"}